<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小小柴io</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chaiqingao.github.io/"/>
  <updated>2020-05-29T02:28:39.000Z</updated>
  <id>https://chaiqingao.github.io/</id>
  
  <author>
    <name>Qingao Chai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1049 Counting Ones (30分)</title>
    <link href="https://chaiqingao.github.io/2020/05/29/1049-Counting-Ones-30%E5%88%86/"/>
    <id>https://chaiqingao.github.io/2020/05/29/1049-Counting-Ones-30%E5%88%86/</id>
    <published>2020-05-29T02:28:39.000Z</published>
    <updated>2020-05-29T02:28:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>The task is simple: given any positive integer $N$, you are supposed to count the total number of 1’s in the decimal form of the integers from 1 to $N$. For example, given $N$ being 12, there are five 1’s in 1, 10, 11, and 12.</p><a id="more"></a><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>Each input file contains one test case which gives the positive $N$ ($\le 2^{30}$).</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>For each test case, print the number of 1’s in one line.</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">12</span></pre></td></tr></table></figure><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">5</span></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>题目大意为：给定一个数字$N$，统计从1到$N$中所有数字里1出现的次数。</p><p>以数字<code>abcdef</code>为例遍历每一位，统计该位取1时的数字个数，以<code>d</code>为例</p><ul><li>若$d=0$，左侧可取$[0,abc)$，右侧可取$[0, 99]$，共$abc*10^2$个</li><li>若$d&gt;1$，左侧可取$[0, abc]$，右侧可取$[0, 99]$，共$(abc+1)*10^2$个</li><li>若$d=1$，左侧取$[0,abc)$时右侧可取$[0, 99]$，左侧取$abc$时，右侧可取$[0, ef]$，共$abc*10^2+ef+1$个</li></ul><p>将每一位的个数求和即可得到结果</p><h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">to</span><span class="params">(<span class="built_in">string</span> s)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.size(); i++) res = res * <span class="number">10</span> + s[i] - <span class="string">'0'</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> res;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">char</span> n[<span class="number">15</span>]; <span class="built_in">scanf</span>(<span class="string">"%s"</span>, n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = len - <span class="number">1</span>, k = <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--, k *= <span class="number">10</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        res += to(<span class="built_in">string</span>(n, i)) * k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (n[i] &gt; <span class="string">'1'</span>) res += k;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (n[i] == <span class="string">'1'</span>) res += to(<span class="built_in">string</span>(n, i + <span class="number">1</span>, len)) + <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, res);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="原题地址"><a href="#原题地址" class="headerlink" title="原题地址"></a>原题地址</h2><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805430595731456" target="_blank" rel="noopener">1049 Counting Ones (30分)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The task is simple: given any positive integer $N$, you are supposed to count the total number of 1’s in the decimal form of the integers from 1 to $N$. For example, given $N$ being 12, there are five 1’s in 1, 10, 11, and 12.&lt;/p&gt;
    
    </summary>
    
    
      <category term="PAT甲级真题" scheme="https://chaiqingao.github.io/categories/PAT%E7%94%B2%E7%BA%A7%E7%9C%9F%E9%A2%98/"/>
    
    
      <category term="CPP" scheme="https://chaiqingao.github.io/tags/CPP/"/>
    
      <category term="算法" scheme="https://chaiqingao.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="数学问题" scheme="https://chaiqingao.github.io/tags/%E6%95%B0%E5%AD%A6%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>PAT甲级单词</title>
    <link href="https://chaiqingao.github.io/2020/04/28/PAT%E7%94%B2%E7%BA%A7%E5%8D%95%E8%AF%8D/"/>
    <id>https://chaiqingao.github.io/2020/04/28/PAT%E7%94%B2%E7%BA%A7%E5%8D%95%E8%AF%8D/</id>
    <published>2020-04-28T11:55:56.000Z</published>
    <updated>2020-05-31T06:21:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>记录刷题时遇到的单词，不断更新中……</p><p><code>preorder traversal</code> 先序遍历<br><code>in-order traversal</code> 中序遍历<br><code>post-order traversal</code> 后序遍历<br><code>level order traversal</code> 层序遍历<br><code>quadratic probing</code> 二次方探查法</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录刷题时遇到的单词，不断更新中……&lt;/p&gt;
&lt;p&gt;&lt;code&gt;preorder traversal&lt;/code&gt; 先序遍历&lt;br&gt;&lt;code&gt;in-order traversal&lt;/code&gt; 中序遍历&lt;br&gt;&lt;code&gt;post-order traversal&lt;/code&gt; 后序遍历&lt;br&gt;&lt;code&gt;level order traversal&lt;/code&gt; 层序遍历&lt;br&gt;&lt;code&gt;quadratic probing&lt;/code&gt; 二次方探查法&lt;/p&gt;
    
    </summary>
    
    
      <category term="PAT甲级真题" scheme="https://chaiqingao.github.io/categories/PAT%E7%94%B2%E7%BA%A7%E7%9C%9F%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>1003 Emergency (25分)</title>
    <link href="https://chaiqingao.github.io/2020/04/27/1003-Emergency-25%E5%88%86/"/>
    <id>https://chaiqingao.github.io/2020/04/27/1003-Emergency-25%E5%88%86/</id>
    <published>2020-04-27T11:07:26.000Z</published>
    <updated>2020-04-27T11:07:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>As an emergency rescue team leader of a city, you are given a special map of your country. The map shows several scattered cities connected by some roads. Amount of rescue teams in each city and the length of each road between any pair of cities are marked on the map. When there is an emergency call to you from some other city, your job is to lead your men to the place as quickly as possible, and at the mean time, call up as many hands on the way as possible.</p><a id="more"></a><h2 id="Input-Specification"><a href="#Input-Specification" class="headerlink" title="Input Specification"></a>Input Specification</h2><p>Each input file contains one test case. For each test case, the first line contains 4 positive integers: $N (≤500)$ - the number of cities (and the cities are numbered from $0$ to $N−1$), $M$ - the number of roads, $C_1$ and $C_2$ - the cities that you are currently in and that you must save, respectively. The next line contains $N$ integers, where the $i$-th integer is the number of rescue teams in the $i$-th city. Then $M$ lines follow, each describes a road with three integers $c_1$, $c_​2$ and $L$, which are the pair of cities connected by a road and the length of that road, respectively. It is guaranteed that there exists at least one path from $C_1$ to $C_2$.</p><h2 id="Output-Specification"><a href="#Output-Specification" class="headerlink" title="Output Specification"></a>Output Specification</h2><p>For each test case, print in one line two numbers: the number of different shortest paths between $C_1$ and $C_2$, and the maximum amount of rescue teams you can possibly gather. All the numbers in a line must be separated by exactly one space, and there is no extra space allowed at the end of a line.</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">5 6 0 2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">1 2 1 5 3</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">0 1 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">0 2 2</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">0 3 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">1 2 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">2 4 1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">3 4 1</span></pre></td></tr></table></figure><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">2 4</span></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>题目大意为：现给定一张无向图（节点有权），求从一点出发到另一点的最短路径的条数，以及经过节点的权之和的最大值。</p><p>利用Dijkstra算法，求起点到其余点的最短路径。（1）求最短路径条数：为每个节点分配一个num表示最短路径条数，在找到最近点v更新其余点时，若以最近点v为中转点u与s距离更近则<code>num[u]=num[v]</code>；若距离相等，则说明有多条路径，即<code>num[u]+=num[v]</code>。（2）求经过节点的权之和的最大值：为每个节点分配一个w表示权重之和（weight为该节点权重），在找到最近点v更新其余点时，若以最近点v为中转点u与s距离更近，则<code>w[u]=weight[u]+w[v]</code>；若距离相等，则需要判断哪条路径权重之和更大，<code>w[u]=max(w[u],weight[u]+w[u])</code>。</p><h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXV 500</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3fffffff</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> dis[MAXV][MAXV], d[MAXV], num[MAXV] = &#123; <span class="number">0</span> &#125;, weight[MAXV], w[MAXV] = &#123; <span class="number">0</span> &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> vis[MAXV] = &#123; <span class="literal">false</span> &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n, m, st, ed;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">(<span class="keyword">int</span> s)</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    fill(d, d + MAXV, INF);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    d[s] = <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    w[s] = weight[s];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    num[s] = <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> v = <span class="number">-1</span>, mindis = INF;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (!vis[j] &amp;&amp; d[j] &lt; mindis)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">                mindis = d[j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">                v = j;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">if</span> (v == <span class="number">-1</span> || v == ed) <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        vis[v] = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">            <span class="keyword">if</span> (!vis[j] &amp;&amp; dis[v][j] != INF)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">if</span> (d[v] + dis[v][j] &lt; d[j])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">                &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">                    d[j] = d[v] + dis[v][j];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">                    num[j] = num[v];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">                    w[j] = weight[j] + w[v];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (d[v] + dis[v][j] == d[j])</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">                &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">                    num[j] += num[v];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">                    <span class="keyword">if</span> (weight[j] + w[v] &gt; w[j]) w[j] = weight[j] + w[v];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">    fill(dis[<span class="number">0</span>], dis[<span class="number">0</span>] + MAXV * MAXV, INF);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;n, &amp;m, &amp;st, &amp;ed);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;weight[i]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">        <span class="keyword">int</span> s, e, l;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;s, &amp;e, &amp;l);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">        dis[s][e] = dis[e][s] = l;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">    dijkstra(st);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d"</span>, num[ed], w[ed]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="原题地址"><a href="#原题地址" class="headerlink" title="原题地址"></a>原题地址</h2><p><a href="https://pintia.cn/problem-sets/994805342720868352/problems/994805523835109376" target="_blank" rel="noopener">1003 Emergency (25分)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As an emergency rescue team leader of a city, you are given a special map of your country. The map shows several scattered cities connected by some roads. Amount of rescue teams in each city and the length of each road between any pair of cities are marked on the map. When there is an emergency call to you from some other city, your job is to lead your men to the place as quickly as possible, and at the mean time, call up as many hands on the way as possible.&lt;/p&gt;
    
    </summary>
    
    
      <category term="PAT甲级真题" scheme="https://chaiqingao.github.io/categories/PAT%E7%94%B2%E7%BA%A7%E7%9C%9F%E9%A2%98/"/>
    
      <category term="图算法" scheme="https://chaiqingao.github.io/categories/%E5%9B%BE%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="CPP" scheme="https://chaiqingao.github.io/tags/CPP/"/>
    
      <category term="算法" scheme="https://chaiqingao.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Dijkstra" scheme="https://chaiqingao.github.io/tags/Dijkstra/"/>
    
      <category term="最短路径" scheme="https://chaiqingao.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/"/>
    
  </entry>
  
  <entry>
    <title>1087 有多少不同的值 (20分)</title>
    <link href="https://chaiqingao.github.io/2020/04/10/1087-%E6%9C%89%E5%A4%9A%E5%B0%91%E4%B8%8D%E5%90%8C%E7%9A%84%E5%80%BC-20%E5%88%86/"/>
    <id>https://chaiqingao.github.io/2020/04/10/1087-%E6%9C%89%E5%A4%9A%E5%B0%91%E4%B8%8D%E5%90%8C%E7%9A%84%E5%80%BC-20%E5%88%86/</id>
    <published>2020-04-10T05:27:26.000Z</published>
    <updated>2020-04-10T05:27:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>当自然数$n$依次取$1,2,3,…,N$时，算式$⌊n/2⌋+⌊n/3⌋+⌊n/5⌋$有多少个不同的值？（注：$⌊x⌋$为取整函数，表示不超过$x$的最大自然数，即$x$的整数部分。）</p><a id="more"></a><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入给出一个正整数$N(2≤N≤10​^4)$。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>在一行中输出题面中算式取到的不同值的个数。</p><h2 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">2017</span></pre></td></tr></table></figure><h2 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">1480</span></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>正常情况下，随着$n$增加1，算式会增加1或者0；当$n$是6/10/15的整数倍的时候，算式会增加2（缺失1个数字）；当$n$是30的整数倍的时候，算式会增加3（缺失2个数字）。</p><p>因此要计算不同值的个数，只需要计算最后一个数字代入的结果+1（+1是因为有0的存在），再减去缺失的数字个数即可（30的整数倍不减反加是因为30是6,10,15的最小公倍数，已经被减了3次，因此需要加1次来弥补）。</p><p>$ans = \frac{N}{2}+\frac{N}{3}+\frac{N}{5}+1-\frac{N}{6}-\frac{N}{10}-\frac{N}{15}+\frac{N}{30}$</p><h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">int</span> n;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,n/<span class="number">2</span>+n/<span class="number">3</span>+n/<span class="number">5</span>+<span class="number">1</span>-n/<span class="number">6</span>-n/<span class="number">10</span>-n/<span class="number">15</span>+n/<span class="number">30</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="原题地址"><a href="#原题地址" class="headerlink" title="原题地址"></a>原题地址</h2><p><a href="https://pintia.cn/problem-sets/994805260223102976/problems/1038429191091781632" target="_blank" rel="noopener">1087 有多少不同的值 (20分)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当自然数$n$依次取$1,2,3,…,N$时，算式$⌊n/2⌋+⌊n/3⌋+⌊n/5⌋$有多少个不同的值？（注：$⌊x⌋$为取整函数，表示不超过$x$的最大自然数，即$x$的整数部分。）&lt;/p&gt;
    
    </summary>
    
    
      <category term="PAT乙级真题" scheme="https://chaiqingao.github.io/categories/PAT%E4%B9%99%E7%BA%A7%E7%9C%9F%E9%A2%98/"/>
    
    
      <category term="CPP" scheme="https://chaiqingao.github.io/tags/CPP/"/>
    
      <category term="算法" scheme="https://chaiqingao.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>课表助手</title>
    <link href="https://chaiqingao.github.io/2020/03/13/%E8%AF%BE%E8%A1%A8%E5%8A%A9%E6%89%8B/"/>
    <id>https://chaiqingao.github.io/2020/03/13/%E8%AF%BE%E8%A1%A8%E5%8A%A9%E6%89%8B/</id>
    <published>2020-03-13T06:12:48.000Z</published>
    <updated>2020-03-13T06:12:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简要介绍"><a href="#简要介绍" class="headerlink" title="简要介绍"></a>简要介绍</h2><p>作者是一名学生，需要在手机上记录课表，虽然现在已经有很多的课程表App了，但是有些呢不支持从教务系统导入，有些呢会有很多广告，再有些就是界面很丑啦~</p><p>因此，为了能够便捷的查看课表，免去现有的课程表软件带来的烦恼，我决定！开发一款无害的课表软件。于是，这款“课表助手”就应运而生（虽然不是一个App，后面再详细解释），它的作用不是显示课表，而是将教务系统中的课表转为<a href="https://zh.wikipedia.org/wiki/ICalendar" target="_blank" rel="noopener">iCalendar</a>文件。iCalendar是一种日历数据交换的标准，既然是标准了，那大家肯定都支持啦，目前已经测试了Win10/Android9/iPadOS13，都可以导入至日历。导入后就可以愉快的使用系统日历查看课表了，不得不说，系统自带的日历界面清新、使用流畅、没有广告（用过的都说好🙄）。</p><ul><li>脚本安装请查看<a href="https://greasyfork.org/zh-CN/scripts/397788-%E8%AF%BE%E8%A1%A8%E5%8A%A9%E6%89%8B" target="_blank" rel="noopener">Greasyfork</a></li><li>完整源码请查看<a href="https://github.com/chaiqingao/Curriculum-to-iCalendar" target="_blank" rel="noopener">Github</a></li></ul><a id="more"></a><h2 id="开发过程"><a href="#开发过程" class="headerlink" title="开发过程"></a>开发过程</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>为了明确我要做什么，首先打开了教务系统课程表页面，他是这个样子的：<br><img alt="教务系统" data-src="https://s1.ax1x.com/2020/03/13/8uc7a8.png"><br>看了一下，嗯！挺好的，适合序列化。然后再看一下iCalendar文件的样子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">BEGIN:VCALENDAR</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">VERSION:2.0</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">PRODID:Curriculum-to-iCalendar</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">BEGIN:VEVENT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">DTSTAMP:20200313T032000Z</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">UID:0@https://chaiqingao.github.io/</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">SUMMARY:summary</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">DTSTART:20200217T000000Z</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">DTEND:20200217T013500Z</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">RRULE:FREQ=WEEKLY;UNTIL=20200428T013500Z;INTERVAL=1</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">LOCATION:location</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">DESCRIPTION:description</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">END:VEVENT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">BEGIN:VEVENT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">......</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">END:VEVENT</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">END:VCALENDAR</span></pre></td></tr></table></figure><p>不难看出，一个iCalendar文件由三部分组成：头 + [VENVENT数组] + 尾。每一个<code>VENVENT</code>有<code>DTSTAMP</code>创建的时间、<code>UID</code>标识符、<code>SUMMARY</code>事件名、<code>DTSTART</code>事件开始时间、<code>DTEND</code>事件结束时间、<code>RRULE</code>重复方式（包括<code>FREQ</code>频率、<code>UNTIL</code>重复截至时间、<code>INTERVAL</code>间隔）、<code>LOCATION</code>地点、<code>DESCRIPTION</code>详细信息。掌握了这些东西，下面就开始吧！</p><h3 id="定位至教务系统中的课程表"><a href="#定位至教务系统中的课程表" class="headerlink" title="定位至教务系统中的课程表"></a>定位至教务系统中的课程表</h3><p>查看网页源码，可以发现，教务系统的课程表嵌套在两层iframe（<code>top-&gt;page_iframe-&gt;iframe0</code>）中，经过一番努力，定位到了！</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> page_iframe = <span class="built_in">document</span>.getElementById(<span class="string">"page_iframe"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> iframe0 = page_iframe.contentDocument.getElementById(<span class="string">"iframe0"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> table = iframe0.contentDocument.getElementsByTagName(<span class="string">"table"</span>)[<span class="number">0</span>];</span></pre></td></tr></table></figure><p>下面就可以对表格里的内容<del>为所欲为</del>进行操作了。</p><h3 id="获取表格中课程名和上课时间非空的行"><a href="#获取表格中课程名和上课时间非空的行" class="headerlink" title="获取表格中课程名和上课时间非空的行"></a>获取表格中课程名和上课时间非空的行</h3><p>第一要事！确保这个课是存在的，这个简单一点：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; table.rows.length; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> courseName = table.rows[i].cells[<span class="number">1</span>].innerText;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> teacherName = table.rows[i].cells[<span class="number">5</span>].innerText;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> timeAddress = table.rows[i].cells[<span class="number">9</span>].innerText;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (courseName !== <span class="string">""</span> &amp;&amp; timeAddress !== <span class="string">""</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">        ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h3 id="构建VEVENT"><a href="#构建VEVENT" class="headerlink" title="构建VEVENT"></a>构建<code>VEVENT</code></h3><p><code>courseName</code>就作为<code>SUMMARY</code>吧，下面是对<code>timeAddress</code>的解析，从中提取出日期时间地址</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> toString = <span class="function"><span class="keyword">function</span> (<span class="params">date</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> date.toISOString().split(<span class="regexp">/-|:|[.]/</span>).slice(<span class="number">0</span>, <span class="number">4</span>).join(<span class="string">""</span>) + <span class="string">"00Z"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> events = timeAddress.split(<span class="string">' '</span>).filter(<span class="function"><span class="params">n</span> =&gt;</span> n != <span class="string">""</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; events.length; j++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">//周一:1-11周,每1周;1-2节,3区,附3-401 ==&gt; [一,1-11,1,1-2,3区,附3-401]</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> informations = events[j].split(<span class="regexp">/周,每|周|节,|:|,|;/</span>).filter(<span class="function"><span class="params">n</span> =&gt;</span> n != <span class="string">""</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> description = <span class="string">"第"</span> + events[j].split(<span class="string">";"</span>)[<span class="number">1</span>] + <span class="string">" "</span> + teacherName;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> weekDay = weekToNum[informations[<span class="number">0</span>]];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> startWeek = <span class="built_in">parseInt</span>(informations[<span class="number">1</span>].split(<span class="string">"-"</span>)[<span class="number">0</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> endWeek = <span class="built_in">parseInt</span>(informations[<span class="number">1</span>].split(<span class="string">"-"</span>)[<span class="number">1</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> interval = <span class="built_in">parseInt</span>(informations[<span class="number">2</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> startTime = class_start[<span class="built_in">parseInt</span>(informations[<span class="number">3</span>].split(<span class="string">'-'</span>)[<span class="number">0</span>])];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> endTime = class_start[<span class="built_in">parseInt</span>(informations[<span class="number">3</span>].split(<span class="string">'-'</span>)[<span class="number">1</span>])];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> address = [informations[<span class="number">4</span>], informations[<span class="number">5</span>], teacherName].join(<span class="string">" "</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> startDate = <span class="keyword">new</span> <span class="built_in">Date</span>(),endDate=<span class="keyword">new</span> <span class="built_in">Date</span>(),untilDate=<span class="keyword">new</span> <span class="built_in">Date</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    startDate.setDate(startDate.getDate() - startDate.getDay() - (currentWeek - startWeek) * <span class="number">7</span> + weekDay);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    startDate.setHours(startTime[<span class="number">0</span>], startTime[<span class="number">1</span>], <span class="number">0</span>, <span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    endDate.setDate(endDate.getDate() - endDate.getDay() - (currentWeek - startWeek) * <span class="number">7</span> + weekDay);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    endDate.setHours(endTime[<span class="number">0</span>],endTime[<span class="number">1</span>]+class_time);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    untilDate.setDate(untilDate.getDate() - untilDate.getDay() + (endWeek - currentWeek) * <span class="number">7</span> + weekDay + <span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    untilDate.setHours(endTime[<span class="number">0</span>],endTime[<span class="number">1</span>]+class_time);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    calendarEvents.push([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'BEGIN:VEVENT'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'DTSTAMP:'</span> + toString(<span class="keyword">new</span> <span class="built_in">Date</span>()),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'UID:'</span> + calendarEvents.length + <span class="string">'@'</span> + <span class="string">'https://chaiqingao.github.io/'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'SUMMARY:'</span> + courseName,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'DTSTART:'</span> + toString(startDate),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'DTEND:'</span> + toString(endDate),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'RRULE:FREQ=WEEKLY;UNTIL='</span> + toString(untilDate) + <span class="string">';INTERVAL='</span> + interval,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'LOCATION:'</span> + address,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'DESCRIPTION:'</span> + description,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'END:VEVENT'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    ].join(SEPARATOR));</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>这里的<code>calendarEvents</code>是一个事件数组，里面存储了所有的课程，加上头尾就可以保存了😁</p><h3 id="保存文件"><a href="#保存文件" class="headerlink" title="保存文件"></a>保存文件</h3><p>这里使用了<code>FileSaver.js</code>用于保存文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fileName = year + <span class="string">"学年第"</span> + term + <span class="string">"学期.ics"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> calendar = calendar_start + SEPARATOR + calendarEvents.join(SEPARATOR) + calendar_end;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> blob;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (navigator.userAgent.indexOf(<span class="string">'MSIE 10'</span>) === <span class="number">-1</span>) &#123; <span class="comment">// chrome or firefox</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    blob = <span class="keyword">new</span> Blob([calendar]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// ie</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> bb = <span class="keyword">new</span> BlobBuilder();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    bb.append(calendar);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    blob = bb.getBlob(<span class="string">'text/x-vCalendar;charset='</span> + <span class="built_in">document</span>.characterSet);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><p>这里将ics文件导入至登录了Outlook邮箱的Win10日历，还是很不错的嘛😜~<br><img alt="Win10日历" data-src="https://s1.ax1x.com/2020/03/13/8uT8Nn.png"><br>再打开iPadOS日历看看，已经同步了👍~（前提是登录相同的邮箱）<br><img alt="iPadOS日历" data-src="https://s1.ax1x.com/2020/03/13/8uTbgf.jpg"><br>就剩Android咯，打开一看发现并没有同步😥，又去搜了一些教程，并没有什么很好的解决方法，只好把ics文件发送至手机然后手动打开了。<br><img alt="Android日历" data-src="https://s1.ax1x.com/2020/03/13/8uT7Ct.jpg"></p><h2 id="脚本下载地址"><a href="#脚本下载地址" class="headerlink" title="脚本下载地址"></a>脚本下载地址</h2><p>将以上内容做成了油猴助手脚本并上传至了greasyfork，关于油猴助手请点<a href="https://www.tampermonkey.net/" target="_blank" rel="noopener">这里</a>，下载脚本请点<a href="https://greasyfork.org/zh-CN/scripts/397788-%E8%AF%BE%E8%A1%A8%E5%8A%A9%E6%89%8B" target="_blank" rel="noopener">这里</a></p><p>💫脚本特点：一键保存ics文件，方便快捷</p><h2 id="Github项目地址"><a href="#Github项目地址" class="headerlink" title="Github项目地址"></a>Github项目地址</h2><p>千山万水总是情，给个Star行不行 <a href="https://github.com/chaiqingao/Curriculum-to-iCalendar" target="_blank" rel="noopener">Curriculum-to-iCalendar</a></p><h2 id="目前支持的教务系统"><a href="#目前支持的教务系统" class="headerlink" title="目前支持的教务系统"></a>目前支持的教务系统</h2><ul><li>WHU</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>第一次写这种油猴助手的脚本，也算是练习了Javascript的应用吧，过程磕磕绊绊的，从有这个想法到实现经历了两天时间，找朋友测试了一下，发现了很多🐛bug……修改再测试，测试再修改，到现在还算是挺完善的，也欢迎大家在Github提Issue。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简要介绍&quot;&gt;&lt;a href=&quot;#简要介绍&quot; class=&quot;headerlink&quot; title=&quot;简要介绍&quot;&gt;&lt;/a&gt;简要介绍&lt;/h2&gt;&lt;p&gt;作者是一名学生，需要在手机上记录课表，虽然现在已经有很多的课程表App了，但是有些呢不支持从教务系统导入，有些呢会有很多广告，再有些就是界面很丑啦~&lt;/p&gt;
&lt;p&gt;因此，为了能够便捷的查看课表，免去现有的课程表软件带来的烦恼，我决定！开发一款无害的课表软件。于是，这款“课表助手”就应运而生（虽然不是一个App，后面再详细解释），它的作用不是显示课表，而是将教务系统中的课表转为&lt;a href=&quot;https://zh.wikipedia.org/wiki/ICalendar&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iCalendar&lt;/a&gt;文件。iCalendar是一种日历数据交换的标准，既然是标准了，那大家肯定都支持啦，目前已经测试了Win10/Android9/iPadOS13，都可以导入至日历。导入后就可以愉快的使用系统日历查看课表了，不得不说，系统自带的日历界面清新、使用流畅、没有广告（用过的都说好🙄）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;脚本安装请查看&lt;a href=&quot;https://greasyfork.org/zh-CN/scripts/397788-%E8%AF%BE%E8%A1%A8%E5%8A%A9%E6%89%8B&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Greasyfork&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;完整源码请查看&lt;a href=&quot;https://github.com/chaiqingao/Curriculum-to-iCalendar&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="小工具" scheme="https://chaiqingao.github.io/categories/%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    
      <category term="开发过程分享" scheme="https://chaiqingao.github.io/categories/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Javascript" scheme="https://chaiqingao.github.io/tags/Javascript/"/>
    
      <category term="课程表" scheme="https://chaiqingao.github.io/tags/%E8%AF%BE%E7%A8%8B%E8%A1%A8/"/>
    
      <category term="iCalendar" scheme="https://chaiqingao.github.io/tags/iCalendar/"/>
    
  </entry>
  
</feed>
